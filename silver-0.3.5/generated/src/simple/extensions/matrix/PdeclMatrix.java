package simple.extensions.matrix;

// d::Decl ::= id::Name r::Expr c::Expr ri::Name ci::Name v::Expr 
public final class PdeclMatrix extends simple.abstractsyntax.NDecl {

	public static final int i_id = 0;
	public static final int i_r = 1;
	public static final int i_c = 2;
	public static final int i_ri = 3;
	public static final int i_ci = 4;
	public static final int i_v = 5;

	public static final Class<?> childTypes[] = {simple.abstractsyntax.NName.class, simple.abstractsyntax.NExpr.class, simple.abstractsyntax.NExpr.class, simple.abstractsyntax.NName.class, simple.abstractsyntax.NName.class, simple.abstractsyntax.NExpr.class};

	public static final int num_local_attrs = Init.count_local__ON__simple_extensions_matrix_declMatrix;
	public static final String[] occurs_local = new String[num_local_attrs];

	public static final common.Lazy[] forwardInheritedAttributes = new common.Lazy[simple.abstractsyntax.NDecl.num_inh_attrs];

	public static final common.Lazy[] synthesizedAttributes = new common.Lazy[simple.abstractsyntax.NDecl.num_syn_attrs];
	public static final common.Lazy[][] childInheritedAttributes = new common.Lazy[6][];

	public static final common.Lazy[] localAttributes = new common.Lazy[num_local_attrs];
	public static final common.Lazy[][] localInheritedAttributes = new common.Lazy[num_local_attrs][];

	static{
	childInheritedAttributes[i_id] = new common.Lazy[simple.abstractsyntax.NName.num_inh_attrs];
	childInheritedAttributes[i_r] = new common.Lazy[simple.abstractsyntax.NExpr.num_inh_attrs];
	childInheritedAttributes[i_c] = new common.Lazy[simple.abstractsyntax.NExpr.num_inh_attrs];
	childInheritedAttributes[i_ri] = new common.Lazy[simple.abstractsyntax.NName.num_inh_attrs];
	childInheritedAttributes[i_ci] = new common.Lazy[simple.abstractsyntax.NName.num_inh_attrs];
	childInheritedAttributes[i_v] = new common.Lazy[simple.abstractsyntax.NExpr.num_inh_attrs];
	}

	public PdeclMatrix(final Object c_id, final Object c_r, final Object c_c, final Object c_ri, final Object c_ci, final Object c_v) {
		this(new Object[]{c_id, c_r, c_c, c_ri, c_ci, c_v});
	}

	public PdeclMatrix(final Object[] args) {
		super(args);
	}

	@Override
	public common.Lazy getSynthesized(final int index) {
		return synthesizedAttributes[index];
	}

	@Override
	public common.Lazy[] getLocalInheritedAttributes(final int key) {
		return localInheritedAttributes[key];
	}

	@Override
	public common.Lazy[] getChildInheritedAttributes(final int key) {
		return childInheritedAttributes[key];
	}

	@Override
	public common.Node getForward(final common.DecoratedNode context) {
		return null;
	}

	@Override
	public common.Lazy getForwardInheritedAttributes(final int index) {
		return forwardInheritedAttributes[index];
	}

	@Override
	public common.Lazy getLocal(final int key) {
		return localAttributes[key];
	}

	@Override
	public final int getNumberOfLocalAttrs() {
		return num_local_attrs;
	}

	@Override
	public final String getNameOfLocalAttr(final int index) {
		return occurs_local[index];
	}

	@Override
	public String getName() {
		return "simple:extensions:matrix:declMatrix";
	}

	static void initProductionAttributeDefinitions() {
		// d.pp = concat([ text("Matrix "), id.pp, brackets(concat([ r.pp, text(", "), c.pp ])), space(), ri.pp, text(", "), ci.pp, text(" ="), groupnest(3, concat([ line(), v.pp, semi() ])) ])
		simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Decl] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pconcat.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)new silver.langutil.pp.Ptext((new common.StringCatter("Matrix ")))); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_id, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pbrackets.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pconcat.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_r, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)new silver.langutil.pp.Ptext((new common.StringCatter(", ")))); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_c, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }})); } }})); } }})); } }})); } }})); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pspace.invoke(new Object[]{})); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_ri, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)new silver.langutil.pp.Ptext((new common.StringCatter(", ")))); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_ci, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)new silver.langutil.pp.Ptext((new common.StringCatter(" =")))); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pgroupnest.invoke(new Object[]{Integer.valueOf((int)3), new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Pconcat.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)new silver.langutil.pp.Pline()); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_v, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr), new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.pp.NDocument)silver.langutil.pp.Psemi.invoke(new Object[]{})); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }})); } }})); } }})); } }})); } }})); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }})); } }})); } }})); } }})); } }})); } }})); } }})); } }})); } }})); } }})); } };
		// d.defs = addBinding(id.name, decorate typeExprMatrix() with {}, emptyEnv())
		simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.simple_abstractsyntax_defs__ON__simple_abstractsyntax_Decl] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((simple.abstractsyntax.NEnv)simple.abstractsyntax.PaddBinding.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_id, simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NTypeExpr)new simple.extensions.matrix.PtypeExprMatrix()).decorate(context, (common.Lazy[])null); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NEnv)simple.abstractsyntax.PemptyEnv.invoke(new Object[]{})); } }})); } };
		// d.errors := r.errors
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_r).synthesized(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Expr)); } });
		// d.errors <- case r.type of integerType() -> [] | t -> [ err(locUnknown(), show(100, r.pp) ++ " is supposed to be Integer type") ] end
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)(new common.Thunk<Object>(context) { public final Object doEval() { final common.Thunk<Object> __SV_LOCAL___fail_171 = new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)(new common.Thunk<Object>(context) { public final Object doEval() { final common.Thunk<Object> __SV_LOCAL_t = new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NType)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_r).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_type__ON__simple_abstractsyntax_Expr)); } };
return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NMessage)new silver.langutil.Perr(new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NLocation)new simple.abstractsyntax.PlocUnknown()); } }, new common.Thunk<Object>(context) { public final Object doEval() { return new common.StringCatter((common.StringCatter)((common.StringCatter)silver.langutil.pp.Pshow.invoke(new Object[]{Integer.valueOf((int)100), context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_r, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr)})), (common.StringCatter)(new common.StringCatter(" is supposed to be Integer type"))); } })); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }})); } }).eval()); } };
return new common.PatternLazy<common.DecoratedNode, common.ConsCell>() { public final common.ConsCell eval(final common.DecoratedNode context, common.DecoratedNode scrutineeIter) {while(scrutineeIter != null) {final common.DecoratedNode scrutinee = scrutineeIter; final common.Node scrutineeNode = scrutinee.undecorate(); if(scrutineeNode instanceof simple.abstractsyntax.PintegerType) {  return (common.ConsCell)((common.ConsCell)core.Pnil.invoke(new Object[]{})); }scrutineeIter = scrutineeIter.forward();}return ((common.ConsCell)(__SV_LOCAL___fail_171.eval()));}}.eval(context, (common.DecoratedNode)((simple.abstractsyntax.NType)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_r).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_type__ON__simple_abstractsyntax_Expr)).decorate(context, (common.Lazy[])null)); } }).eval()); } });
		// d.errors <- c.errors
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_c).synthesized(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Expr)); } });
		// d.errors <- case c.type of integerType() -> [] | t -> [ err(locUnknown(), show(100, c.pp) ++ " is supposed to be Integer type") ] end
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)(new common.Thunk<Object>(context) { public final Object doEval() { final common.Thunk<Object> __SV_LOCAL___fail_195 = new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)(new common.Thunk<Object>(context) { public final Object doEval() { final common.Thunk<Object> __SV_LOCAL_t = new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NType)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_c).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_type__ON__simple_abstractsyntax_Expr)); } };
return ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NMessage)new silver.langutil.Perr(new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NLocation)new simple.abstractsyntax.PlocUnknown()); } }, new common.Thunk<Object>(context) { public final Object doEval() { return new common.StringCatter((common.StringCatter)((common.StringCatter)silver.langutil.pp.Pshow.invoke(new Object[]{Integer.valueOf((int)100), context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_c, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr)})), (common.StringCatter)(new common.StringCatter(" is supposed to be Integer type"))); } })); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }})); } }).eval()); } };
return new common.PatternLazy<common.DecoratedNode, common.ConsCell>() { public final common.ConsCell eval(final common.DecoratedNode context, common.DecoratedNode scrutineeIter) {while(scrutineeIter != null) {final common.DecoratedNode scrutinee = scrutineeIter; final common.Node scrutineeNode = scrutinee.undecorate(); if(scrutineeNode instanceof simple.abstractsyntax.PintegerType) {  return (common.ConsCell)((common.ConsCell)core.Pnil.invoke(new Object[]{})); }scrutineeIter = scrutineeIter.forward();}return ((common.ConsCell)(__SV_LOCAL___fail_195.eval()));}}.eval(context, (common.DecoratedNode)((simple.abstractsyntax.NType)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_c).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_type__ON__simple_abstractsyntax_Expr)).decorate(context, (common.Lazy[])null)); } }).eval()); } });
		// d.errors <- v.errors
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_v).synthesized(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Expr)); } });
		// d.errors <- if isNumeric(v.type) then [] else [ err(locUnknown(), show(100, v.pp) ++ " is supposed to be numeric type") ]
		if(simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] == null)
			simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl] = new silver.langutil.CAerrors(simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl);
		((common.CollectionAttribute)simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.silver_langutil_errors__ON__simple_abstractsyntax_Decl]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)simple.abstractsyntax.PisNumeric.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_v, simple.abstractsyntax.Init.simple_abstractsyntax_type__ON__simple_abstractsyntax_Expr)})) ? ((common.ConsCell)core.Pnil.invoke(new Object[]{})) : ((common.ConsCell)core.Pcons.invoke(new Object[]{new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NMessage)new silver.langutil.Perr(new common.Thunk<Object>(context) { public final Object doEval() { return ((silver.langutil.NLocation)new simple.abstractsyntax.PlocUnknown()); } }, new common.Thunk<Object>(context) { public final Object doEval() { return new common.StringCatter((common.StringCatter)((common.StringCatter)silver.langutil.pp.Pshow.invoke(new Object[]{Integer.valueOf((int)100), context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_v, simple.abstractsyntax.Init.silver_langutil_pp__ON__simple_abstractsyntax_Expr)})), (common.StringCatter)(new common.StringCatter(" is supposed to be numeric type"))); } })); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((common.ConsCell)core.Pnil.invoke(new Object[]{})); } }}))); } });
		// v.env = addBinding(ri.name, decorate typeExprInteger() with {}, addBinding(ci.name, decorate typeExprInteger() with {}, d.env))
		simple.extensions.matrix.PdeclMatrix.childInheritedAttributes[simple.extensions.matrix.PdeclMatrix.i_v][simple.abstractsyntax.Init.simple_abstractsyntax_env__ON__simple_abstractsyntax_Expr] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((simple.abstractsyntax.NEnv)simple.abstractsyntax.PaddBinding.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_ri, simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NTypeExpr)new simple.abstractsyntax.PtypeExprInteger()).decorate(context, (common.Lazy[])null); } }, new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NEnv)simple.abstractsyntax.PaddBinding.invoke(new Object[]{context.childSynthesizedLazy(simple.extensions.matrix.PdeclMatrix.i_ci, simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name), new common.Thunk<Object>(context) { public final Object doEval() { return ((simple.abstractsyntax.NTypeExpr)new simple.abstractsyntax.PtypeExprInteger()).decorate(context, (common.Lazy[])null); } }, context.contextInheritedLazy(simple.abstractsyntax.Init.simple_abstractsyntax_env__ON__simple_abstractsyntax_Decl)})); } }})); } };
		// d.c_code = "double " ++ id.name ++ "[" ++ r.c_code ++ "][" ++ c.c_code ++ "];\n" ++ "for(int " ++ ri.name ++ " = 0; " ++ ri.name ++ " < " ++ r.c_code ++ "; " ++ ri.name ++ "++) {\n" ++ " for(int " ++ ci.name ++ " = 0; " ++ ci.name ++ " < " ++ c.c_code ++ "; " ++ ci.name ++ "++) {\n" ++ "  " ++ id.name ++ "[" ++ ri.name ++ "][" ++ ci.name ++ "] = " ++ v.c_code ++ ";\n" ++ " }\n" ++ "}\n"
		simple.extensions.matrix.PdeclMatrix.synthesizedAttributes[simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Decl] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)(new common.StringCatter("double ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_id).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("[")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_r).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Expr)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("][")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_c).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Expr)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("];\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("for(int ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ri).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" = 0; ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ri).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" < ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_r).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Expr)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("; ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ri).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("++) {\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" for(int ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ci).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" = 0; ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ci).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" < ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_c).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Expr)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("; ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ci).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("++) {\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_id).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("[")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ri).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("][")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_ci).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_name__ON__simple_abstractsyntax_Name)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("] = ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(simple.extensions.matrix.PdeclMatrix.i_v).synthesized(simple.abstractsyntax.Init.simple_abstractsyntax_c_code__ON__simple_abstractsyntax_Expr)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(";\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter(" }\n")), (common.StringCatter)(new common.StringCatter("}\n"))))))))))))))))))))))))))))))))))))); } };
	}

	public static final common.NodeFactory<PdeclMatrix> factory = new Factory();

	public static final class Factory extends common.NodeFactory<PdeclMatrix> {

		@Override
		public PdeclMatrix invoke(final Object[] children) {
			return new PdeclMatrix(children);
		}

	};
}
