<?xml version="1.0" encoding="UTF-8"?>

<CopperSpec xmlns="http://melt.cs.umn.edu/copper/xmlns">
  <Parser id="simple_host_parse" isUnitary="true">
    <PP>simple:host:parse</PP>
    <Grammars><GrammarRef id="host"/></Grammars>
    <StartSymbol><NonterminalRef id="simple_concretesyntax_Root" grammar="host" /></StartSymbol>
    <StartLayout><TerminalRef id="simple_terminals_LineComment" grammar="host" /><TerminalRef id="simple_terminals_WhiteSpace" grammar="host" /></StartLayout>
  </Parser>

  <Grammar id="host">

    <PP>host</PP>

    <Layout><TerminalRef id="simple_terminals_LineComment" grammar="host" /><TerminalRef id="simple_terminals_WhiteSpace" grammar="host" /></Layout>

    <Declarations>
      <ParserAttribute id="context">
        <Type><![CDATA[common.DecoratedNode]]></Type>
        <Code><![CDATA[context = common.TopNode.singleton;]]></Code>
      </ParserAttribute>
  <TerminalClass id="simple_terminals_KEYWORDS" />
  <Terminal id="simple_terminals_And">
    <PP>simple:terminals:And</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>6</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_BooleanLiteral">
    <PP>simple:terminals:BooleanLiteral</PP>
    <Regex><Choice><Concatenation><CharacterSet><SingleCharacter char="T"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="F"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Choice></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Boolean_t">
    <PP>simple:terminals:Boolean_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="B"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Comma">
    <PP>simple:terminals:Comma</PP>
    <Regex><CharacterSet><SingleCharacter char=","/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Dash">
    <PP>simple:terminals:Dash</PP>
    <Regex><CharacterSet><SingleCharacter char="-"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>10</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Else">
    <PP>simple:terminals:Else</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Eq">
    <PP>simple:terminals:Eq</PP>
    <Regex><CharacterSet><SingleCharacter char="="/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_EqEq">
    <PP>simple:terminals:EqEq</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="="/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_FloatLiteral">
    <PP>simple:terminals:FloatLiteral</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Float_t">
    <PP>simple:terminals:Float_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="F"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_For">
    <PP>simple:terminals:For</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Gt">
    <PP>simple:terminals:Gt</PP>
    <Regex><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_GtEq">
    <PP>simple:terminals:GtEq</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Id">
    <PP>simple:terminals:Id</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="a" upper="z"/><CharacterRange lower="A" upper="Z"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="z"/><CharacterRange lower="A" upper="Z"/><CharacterRange lower="0" upper="9"/><SingleCharacter char="_"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_If">
    <PP>simple:terminals:If</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_IntegerLiteral">
    <PP>simple:terminals:IntegerLiteral</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Integer_t">
    <PP>simple:terminals:Integer_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="I"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_LeftCurly">
    <PP>simple:terminals:LeftCurly</PP>
    <Regex><CharacterSet><SingleCharacter char="{"/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_LeftParen">
    <PP>simple:terminals:LeftParen</PP>
    <Regex><CharacterSet><SingleCharacter char="("/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_LineComment">
    <PP>simple:terminals:LineComment</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="/"/></CharacterSet><CharacterSet><SingleCharacter char="/"/></CharacterSet><KleeneStar><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Lt">
    <PP>simple:terminals:Lt</PP>
    <Regex><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_LtEq">
    <PP>simple:terminals:LtEq</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Main">
    <PP>simple:terminals:Main</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_NEq">
    <PP>simple:terminals:NEq</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>8</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Not">
    <PP>simple:terminals:Not</PP>
    <Regex><CharacterSet><SingleCharacter char="!"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>14</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Or">
    <PP>simple:terminals:Or</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="|"/></CharacterSet><CharacterSet><SingleCharacter char="|"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>6</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Plus">
    <PP>simple:terminals:Plus</PP>
    <Regex><CharacterSet><SingleCharacter char="+"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>10</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Print">
    <PP>simple:terminals:Print</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_RightCurly">
    <PP>simple:terminals:RightCurly</PP>
    <Regex><CharacterSet><SingleCharacter char="}"/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_RightParen">
    <PP>simple:terminals:RightParen</PP>
    <Regex><CharacterSet><SingleCharacter char=")"/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Semicolon">
    <PP>simple:terminals:Semicolon</PP>
    <Regex><CharacterSet><SingleCharacter char=";"/></CharacterSet></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Slash">
    <PP>simple:terminals:Slash</PP>
    <Regex><CharacterSet><SingleCharacter char="/"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>12</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_Star">
    <PP>simple:terminals:Star</PP>
    <Regex><CharacterSet><SingleCharacter char="*"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>12</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_StringLiteral">
    <PP>simple:terminals:StringLiteral</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&#10;"/><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Choice><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet><SingleCharacter char="\"/></CharacterSet></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Choice></Choice></Choice></Choice></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_To">
    <PP>simple:terminals:To</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_While">
    <PP>simple:terminals:While</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="w"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses><TerminalClassRef id="simple_terminals_KEYWORDS" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="simple_terminals_WhiteSpace">
    <PP>simple:terminals:WhiteSpace</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&#9;"/><SingleCharacter char="&#10;"/><SingleCharacter char=" "/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#9;"/><SingleCharacter char="&#10;"/><SingleCharacter char=" "/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>common.TerminalRecord</Type>
    <Code><![CDATA[
RESULT = new common.TerminalRecord(lexeme,virtualLocation,Integer.valueOf((int)getStartRealLocation().getPos()),Integer.valueOf((int)getEndRealLocation().getPos()));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="simple_concretesyntax_Decl">
    <PP>simple:concretesyntax:Decl</PP>
    <Type><![CDATA[simple.concretesyntax.NDecl]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxDecl_sv_9_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxDecl_sv_9_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Decl" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_TypeExpr" grammar="host" /><TerminalRef id="simple_terminals_Id" grammar="host" /><TerminalRef id="simple_terminals_Semicolon" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_Expr">
    <PP>simple:concretesyntax:Expr</PP>
    <Type><![CDATA[simple.concretesyntax.NExpr]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_99_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_99_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_StringLiteral" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_96_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_96_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_BooleanLiteral" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_93_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_93_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_FloatLiteral" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_91_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_91_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_IntegerLiteral" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_85_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_85_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Id" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_79_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_79_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Slash" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_77_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_77_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Star" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_75_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_75_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Dash" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_73_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_73_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Plus" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_52_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_52_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_GtEq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_50_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_50_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Gt" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_48_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_48_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_LtEq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_46_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_46_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Lt" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_44_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_44_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_NEq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_42_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_42_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_EqEq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_33_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_33_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Not" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_31_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_31_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Or" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_29_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_29_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_And" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxExpr_sv_21_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxExpr_sv_21_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_Root">
    <PP>simple:concretesyntax:Root</PP>
    <Type><![CDATA[simple.concretesyntax.NRoot]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxRoot_sv_30_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxRoot_sv_30_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Root" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Main" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><TerminalRef id="simple_terminals_LeftCurly" grammar="host" /><NonterminalRef id="simple_concretesyntax_Stmts" grammar="host" /><TerminalRef id="simple_terminals_RightCurly" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_Stmt">
    <PP>simple:concretesyntax:Stmt</PP>
    <Type><![CDATA[simple.concretesyntax.NStmt]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_37_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_37_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Stmt" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Decl" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_35_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_35_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Stmt" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_33_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_33_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Stmt" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_StmtMatched">
    <PP>simple:concretesyntax:StmtMatched</PP>
    <Type><![CDATA[simple.concretesyntax.NStmtMatched]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_54_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_54_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_While" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_52_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_52_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Print" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><TerminalRef id="simple_terminals_Semicolon" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_50_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_50_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Semicolon" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_48_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_48_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Id" grammar="host" /><TerminalRef id="simple_terminals_Eq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_Semicolon" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_46_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_46_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_LeftCurly" grammar="host" /><NonterminalRef id="simple_concretesyntax_Stmts" grammar="host" /><TerminalRef id="simple_terminals_RightCurly" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxFor_sv_4_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxFor_sv_4_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_For" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><TerminalRef id="simple_terminals_Id" grammar="host" /><TerminalRef id="simple_terminals_Eq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_To" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_StmtUnMatched">
    <PP>simple:concretesyntax:StmtUnMatched</PP>
    <Type><![CDATA[simple.concretesyntax.NStmtUnMatched]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_69_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_69_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_If" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /><TerminalRef id="simple_terminals_Else" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_67_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_67_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_If" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtMatched" grammar="host" /><TerminalRef id="simple_terminals_Else" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_65_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_65_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_If" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Stmt" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_63_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_63_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_While" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxFor_sv_8_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxFor_sv_8_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_For" grammar="host" /><TerminalRef id="simple_terminals_LeftParen" grammar="host" /><TerminalRef id="simple_terminals_Id" grammar="host" /><TerminalRef id="simple_terminals_Eq" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_To" grammar="host" /><NonterminalRef id="simple_concretesyntax_Expr" grammar="host" /><TerminalRef id="simple_terminals_RightParen" grammar="host" /><NonterminalRef id="simple_concretesyntax_StmtUnMatched" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_Stmts">
    <PP>simple:concretesyntax:Stmts</PP>
    <Type><![CDATA[simple.concretesyntax.NStmts]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_stmtNone">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PstmtNone(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Stmts" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxStmt_sv_19_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxStmt_sv_19_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_Stmts" grammar="host" /></LHS>
    <RHS><NonterminalRef id="simple_concretesyntax_Stmt" grammar="host" /><NonterminalRef id="simple_concretesyntax_Stmts" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="simple_concretesyntax_TypeExpr">
    <PP>simple:concretesyntax:TypeExpr</PP>
    <Type><![CDATA[simple.concretesyntax.NTypeExpr]]></Type>
  </Nonterminal>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxDecl_sv_23_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxDecl_sv_23_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_TypeExpr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Boolean_t" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxDecl_sv_21_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxDecl_sv_21_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_TypeExpr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Float_t" grammar="host" /></RHS>
  </Production>
  <Production id="simple_concretesyntax_P_simple_concretesyntaxDecl_sv_18_1">
    <Code><![CDATA[
RESULT = new simple.concretesyntax.PP_simple_concretesyntaxDecl_sv_18_1(_children);
]]></Code>
    <LHS><NonterminalRef id="simple_concretesyntax_TypeExpr" grammar="host" /></LHS>
    <RHS><TerminalRef id="simple_terminals_Integer_t" grammar="host" /></RHS>
  </Production>
    </Declarations>
  </Grammar>
</CopperSpec>
