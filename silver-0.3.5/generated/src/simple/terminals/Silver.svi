declaredName 'simple:terminals'
moduleNames ['core']
allDeps ['core']
defs [term('Terminals.sv', 6, 16, 'simple:terminals:WhiteSpace', /[\t\n\ ]+/),
 term('Terminals.sv', 7, 16, 'simple:terminals:LineComment', /\/\/.*/),
 term('Terminals.sv', 13, 9, 'simple:terminals:Not', /[\!]/),
 term('Terminals.sv', 15, 9, 'simple:terminals:Star', /[\*]/),
 term('Terminals.sv', 16, 9, 'simple:terminals:Slash', /[\/]/),
 term('Terminals.sv', 18, 9, 'simple:terminals:Plus', /[\+]/),
 term('Terminals.sv', 19, 9, 'simple:terminals:Dash', /[\-]/),
 term('Terminals.sv', 21, 9, 'simple:terminals:EqEq', /[\=][\=]/),
 term('Terminals.sv', 22, 9, 'simple:terminals:NEq', /[\!][\=]/),
 term('Terminals.sv', 23, 9, 'simple:terminals:Lt', /[\<]/),
 term('Terminals.sv', 24, 9, 'simple:terminals:LtEq', /[\<][\=]/),
 term('Terminals.sv', 25, 9, 'simple:terminals:Gt', /[\>]/),
 term('Terminals.sv', 26, 9, 'simple:terminals:GtEq', /[\>][\=]/),
 term('Terminals.sv', 28, 9, 'simple:terminals:And', /[\&][\&]/),
 term('Terminals.sv', 29, 9, 'simple:terminals:Or', /[\|][\|]/),
 term('Terminals.sv', 31, 9, 'simple:terminals:Eq', /[\=]/),
 term('Terminals.sv', 35, 9, 'simple:terminals:LeftParen', /[\(]/),
 term('Terminals.sv', 36, 9, 'simple:terminals:RightParen', /[\)]/),
 term('Terminals.sv', 37, 9, 'simple:terminals:LeftCurly', /[\{]/),
 term('Terminals.sv', 38, 9, 'simple:terminals:RightCurly', /[\}]/),
 term('Terminals.sv', 39, 9, 'simple:terminals:Semicolon', /[\;]/),
 term('Terminals.sv', 40, 9, 'simple:terminals:Comma', /[\,]/),
 term('Terminals.sv', 50, 9, 'simple:terminals:If', /if/),
 term('Terminals.sv', 51, 9, 'simple:terminals:Else', /else/),
 term('Terminals.sv', 52, 9, 'simple:terminals:While', /while/),
 term('Terminals.sv', 53, 9, 'simple:terminals:Print', /print/),
 term('Terminals.sv', 54, 9, 'simple:terminals:For', /for/),
 term('Terminals.sv', 55, 9, 'simple:terminals:To', /to/),
 term('Terminals.sv', 57, 9, 'simple:terminals:Main', /main/),
 term('Terminals.sv', 61, 9, 'simple:terminals:Integer_t', /Integer/),
 term('Terminals.sv', 62, 9, 'simple:terminals:Float_t', /Float/),
 term('Terminals.sv', 63, 9, 'simple:terminals:Boolean_t', /Boolean/),
 term('Terminals.sv', 75, 9, 'simple:terminals:Id', /[a-zA-Z][a-zA-Z0-9_]*/),
 term('Terminals.sv', 77, 9, 'simple:terminals:IntegerLiteral', /[0-9]+/),
 term('Terminals.sv', 78, 9, 'simple:terminals:FloatLiteral', /[0-9]+\.[0-9]+/),
 term('Terminals.sv', 79, 9, 'simple:terminals:BooleanLiteral', /(True)|(False)/),
 term('Terminals.sv', 81, 9, 'simple:terminals:StringLiteral', /\"([^\n\"\\]|\\\"|\\\\|\\n|\\r|\\t)*\"/),
 lexer_class('Terminals.sv', 46, 12, 'simple:terminals:KEYWORDS')]
exportedGrammars []
condBuild []
syntax [term('simple:terminals:WhiteSpace', /[\t\n\ ]+/, [ignore()]),
 term('simple:terminals:LineComment', /\/\/.*/, [ignore()]),
 term('simple:terminals:Not', /[\!]/, [prec(14)]),
 term('simple:terminals:Star', /[\*]/, [prec(12),assoc('left')]),
 term('simple:terminals:Slash', /[\/]/, [prec(12),assoc('left')]),
 term('simple:terminals:Plus', /[\+]/, [prec(10),assoc('left')]),
 term('simple:terminals:Dash', /[\-]/, [prec(10),assoc('left')]),
 term('simple:terminals:EqEq', /[\=][\=]/, [prec(8)]),
 term('simple:terminals:NEq', /[\!][\=]/, [prec(8)]),
 term('simple:terminals:Lt', /[\<]/, [prec(8)]),
 term('simple:terminals:LtEq', /[\<][\=]/, [prec(8)]),
 term('simple:terminals:Gt', /[\>]/, [prec(8)]),
 term('simple:terminals:GtEq', /[\>][\=]/, [prec(8)]),
 term('simple:terminals:And', /[\&][\&]/, [prec(6)]),
 term('simple:terminals:Or', /[\|][\|]/, [prec(6)]),
 term('simple:terminals:Eq', /[\=]/, []),
 term('simple:terminals:LeftParen', /[\(]/, []),
 term('simple:terminals:RightParen', /[\)]/, []),
 term('simple:terminals:LeftCurly', /[\{]/, []),
 term('simple:terminals:RightCurly', /[\}]/, []),
 term('simple:terminals:Semicolon', /[\;]/, []),
 term('simple:terminals:Comma', /[\,]/, []),
 lclass('simple:terminals:KEYWORDS',[],[]),
 term('simple:terminals:If', /if/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Else', /else/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:While', /while/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Print', /print/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:For', /for/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:To', /to/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Main', /main/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Integer_t', /Integer/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Float_t', /Float/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Boolean_t', /Boolean/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:Id', /[a-zA-Z][a-zA-Z0-9_]*/, [sub(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:IntegerLiteral', /[0-9]+/, []),
 term('simple:terminals:FloatLiteral', /[0-9]+\.[0-9]+/, []),
 term('simple:terminals:BooleanLiteral', /(True)|(False)/, [classes(['simple:terminals:KEYWORDS'])]),
 term('simple:terminals:StringLiteral', /\"([^\n\"\\]|\\\"|\\\\|\\n|\\r|\\t)*\"/, [])]
parsers []