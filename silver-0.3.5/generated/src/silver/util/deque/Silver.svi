declaredName 'silver:util:deque'
moduleNames ['core']
allDeps ['core']
defs [nt('Deque.sv', 5, 12, 'silver:util:deque:Deque', [a], nt('silver:util:deque:Deque', [a])),
 prod('Deque.sv', 7, 20, [a], signature('silver:util:deque:deque', [element('ln', int), element('l', [a]), element('rn', int), element('r', [a])], element('top', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 11, 9, [a], signature('silver:util:deque:dqEmpty', [], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 17, 9, [a], signature('silver:util:deque:dqCons', [element('e', a), element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 22, 9, [a], signature('silver:util:deque:dqHead', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', a))),
 fun('Deque.sv', 30, 9, [a], signature('silver:util:deque:dqTail', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 38, 9, [a], signature('silver:util:deque:dqSnoc', [element('q', nt('silver:util:deque:Deque', [a])), element('e', a)], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 43, 9, [a], signature('silver:util:deque:dqLast', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', a))),
 fun('Deque.sv', 51, 9, [a], signature('silver:util:deque:dqInit', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 59, 9, [a], signature('silver:util:deque:dqIsEmpty', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', bool))),
 fun('Deque.sv', 64, 9, [a], signature('silver:util:deque:dqReverse', [element('q', nt('silver:util:deque:Deque', [a]))], element('__func__lhs', nt('silver:util:deque:Deque', [a])))),
 fun('Deque.sv', 70, 9, [a], signature('silver:util:deque:dqCheck', [element('lenf', int), element('f', [a]), element('lenr', int), element('r', [a])], element('__func__lhs', nt('silver:util:deque:Deque', [a]))))]
exportedGrammars []
condBuild []
syntax [nt([a], nt('silver:util:deque:Deque', [a]))]
parsers []